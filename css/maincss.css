/**
* Setup
*/
/* Where does the horizontal grid start? */
/**
 * Tell inuit.css when breakpoints start.
 */
/*------------------------------------*\
	$MIXINS
\*------------------------------------*/
/**
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
	 `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 */
/**
 * Style any number of headings in one fell swoop, e.g.:
 *
	 .foo{
		 @include headings(1, 3){
			 color:#BADA55;
		 }
	}
 *
 * With thanks to @lar_zzz, @paranoida, @rowanmanning and ultimately
 * @thierrylemoulec for refining and improving my initial mixin.
 */
/**
 * Create vendor-prefixed CSS in one go, e.g.
 *
	 `@include vendor(border-radius, 4px);`
 *
 */
/**
 * Create CSS keyframe animations for all vendors in one go, e.g.:
 *
	 .foo{
		 @include vendor(animation, shrink 3s);
	 }

	 @include keyframe(shrink){
		 from{
			 font-size:5em;
		 }
	 }
 *
 * Courtesy of @integralist: twitter.com/integralist/status/260484115315437569
 */
/**
 * Force overly long spans of text to truncate, e.g.:
 *
	 `@include truncate(100%);`
 *
 * Where `$truncation-boundary` is a united measurement.
 */
/**
 * CSS arrows!!! But... before you read on, you might want to grab a coffee...
 *
 * This mixin creates a CSS arrow on a given element. We can have the arrow
 * appear in one of 12 locations, thus:
 *
 *       01    02    03
 *    +------------------+
 * 12 |                  | 04
 *    |                  |
 * 11 |                  | 05
 *    |                  |
 * 10 |                  | 06
 *    +------------------+
 *       09    08    07
 *
 * You pass this position in along with a desired arrow color and optional
 * border color, for example:
 *
 * `@include arrow(top, left, red)`
 *
 * for just a single, red arrow, or:
 *
 * `@include arrow(bottom, center, red, black)`
 *
 * which will create a red triangle with a black border which sits at the bottom
 * center of the element. Call the mixin thus:
 *
	 .foo{
		 background-color:#BADA55;
		 border:1px solid #ACE;
		 @include arrow(top, left, #BADA55, #ACE);
	 }
 *
 */
/**
 * Media query mixin.
 *
 * It’s not great practice to define solid breakpoints up-front, preferring to
 * modify your design when it needs it, rather than assuming you’ll want a
 * change at ‘mobile’. However, as inuit.css is required to take a hands off
 * approach to design decisions, this is the closest we can get to baked-in
 * responsiveness. It’s flexible enough to allow you to set your own breakpoints
 * but solid enough to be frameworkified.
 *
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * lap-and-up
 * portable
 * desk
 * desk-wide
 *
 * Not using a media query will, naturally, serve styles to all devices.
 *
 * `@include media-query(palm){ [styles here] }`
 *
 * We work out your end points for you:
 */
/*------------------------------------*\
    $RESET
\*------------------------------------*/
/**
 * A more considered reset; more of a restart...
 * As per: csswizardry.com/2011/10/reset-restarted
 */
*, *:before, *:after {
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

/**
 * The usual...
 */
h1, h2, h3, h4, h5, h6, p, blockquote, pre, dl, dd, ol, ul, form, fieldset, legend, table, th, td, caption, hr {
  margin: 0;
  padding: 0; }

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title], dfn[title] {
  cursor: help; }

/**
 * Remove underlines from potentially troublesome elements.
 */
u, ins {
  text-decoration: none; }

/**
 * Apply faux underline via `border-bottom`.
 */
ins {
  border-bottom: 1px solid; }

/**
 * So that `alt` text is visually offset if images don’t load.
 */
img {
  font-style: italic; }

/**
 * Give form elements some cursor interactions...
 */
label, input, textarea, button, select, option {
  cursor: pointer; }

.text-input:active, .text-input:focus, textarea:active, textarea:focus {
  cursor: text;
  outline: none; }

/*! normalize.css v2.1.0 | MIT License | git.io/normalize */
/* ==========================================================================
	 HTML5 display definitions
	 ========================================================================== */
/*
 * Correct `block` display not defined in IE 8/9.
 */
article, aside, details, figcaption, figure, footer, header, hgroup, main, nav, section, summary {
  display: block; }

/*
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio, canvas, video {
  display: inline-block; }

/*
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/*
 * Address styling not present in IE 8/9.
 */
[hidden] {
  display: none; }

/* ==========================================================================
	 Base
	 ========================================================================== */
/*
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */ }

/*
 * Remove default margin.
 */
body {
  margin: 0; }

/* ==========================================================================
	 Links
	 ========================================================================== */
/*
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted; }

/*
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active, a:hover {
  outline: 0; }

/* ==========================================================================
	 Typography
	 ========================================================================== */
/*
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/*
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/*
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b, strong {
  font-weight: bold; }

/*
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic; }

/*
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/*
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/*
 * Correct font family set oddly in Safari 5 and Chrome.
 */
code, kbd, pre, samp {
  font-family: monospace, serif;
  font-size: 1em; }

/*
 * Improve readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre-wrap; }

/*
 * Set consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019"; }

/*
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/*
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* ==========================================================================
	 Embedded content
	 ========================================================================== */
/*
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0; }

/*
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden; }

/* ==========================================================================
	 Figures
	 ========================================================================== */
/*
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0; }

/* ==========================================================================
	 Forms
	 ========================================================================== */
/*
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/*
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/*
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button, input, select, textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */ }

/*
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button, input {
  line-height: normal; }

/*
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button, select {
  text-transform: none; }

/*
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/*
 * Re-set default cursor for disabled elements.
 */
button[disabled], html input[disabled] {
  cursor: default; }

/*
 * 1. Address box sizing set to `content-box` in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 */
input[type="checkbox"], input[type="radio"] {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/*
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */ }

/*
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/*
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/*
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */ }

/* ==========================================================================
	 Tables
	 ========================================================================== */
/*
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/*------------------------------------*\
    $CLEARFIX
\*------------------------------------*/
/**
 * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 * Extend the clearfix class with Sass to avoid the `.cf` class appearing over
 * and over in your markup.
 */
.clearfix:after, .cf:after {
  content: "";
  display: table;
  clear: both; }

/*------------------------------------*\
    $SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned, this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
/**
 * Base elements
 */
h1, h2, h3, h4, h5, h6, hgroup, blockquote, p, address, fieldset, figure, pre, .media, .island, .islet {
  margin-bottom: 36px;
  margin-bottom: 1.28571rem; }
  .islet h1, .islet h2, .islet h3, .islet h4, .islet h5, .islet h6, .islet hgroup, .islet blockquote, .islet p, .islet address, .islet fieldset, .islet figure, .islet pre, .islet .media, .islet .island, .islet .islet {
    margin-bottom: 18px;
    margin-bottom: 0.64286rem; }

/**
 * `hr` elements only take up a few pixels, so we need to give them special
 * treatment regarding vertical rhythm.
 */
hr {
  margin-bottom: 34px;
  margin-bottom: 1.21429rem; }

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once, here.
 */
ul, ol, dd {
  margin-left: 72px;
  margin-left: 2.57143rem; }

/*
## Type

    <h1>This is a heading 1</h1>
    <h2>This is a heading 2</h2>
    <h3>This is a heading 3</h3>
    <h4>This is a heading 4</h4>
    <h5>This is a heading 5</h5>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
    <p class="quiet">Quiet text: Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
    <p class="small">Samll text: Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
    <p class="small quiet">Small quiet text: Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
    <p class="italic">Italic: Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
    <p class="beefcake">Bold: Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
    <p class="bigger">Bigger text: Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>

*/
h1, .alpha, .h1-size {
  font-size: 128px;
  font-size: 4.57143rem;
  line-height: 1.125; }

h2, .beta {
  font-size: 90px;
  font-size: 3.21429rem;
  line-height: 1.2; }

h3, .gamma {
  font-size: 64px;
  font-size: 2.28571rem;
  line-height: 1.125; }

h4, .delta {
  font-size: 44px;
  font-size: 1.57143rem;
  line-height: 1.63636; }

h5, .epsilon {
  font-size: 32px;
  font-size: 1.14286rem;
  line-height: 1.125; }

h6, .zeta {
  font-size: 22px;
  font-size: 0.78571rem;
  line-height: 1.63636; }

html {
  font: 1.75em/1.28571 "Avenir Next", "Helvetica Neue", sans-serif;
  overflow-y: scroll;
  min-height: 100%;
  font-weight: 500; }

body, button, input {
  color: #f9f9f9; }

::selection {
  background: #fdec9f;
  color: #45423f; }

::-moz-selection {
  background: #fdec9f;
  color: #45423f; }

h1, h2, h3, h4, h5, h6 {
  line-height: 36px;
  margin-bottom: 0; }

h1, h2, h3 {
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 1px;
  text-rendering: optimizeLegibility;
  font-family: "Avenir Next", "Helvetica Neue", sans-serif;
  margin: 36px 0; }

h4 {
  font-weight: 600; }

h5, h6 {
  font-weight: 500; }

h1 {
  line-height: 180px; }

h2 {
  line-height: 144px; }

h3 {
  line-height: 108px; }

p {
  margin-bottom: 36px; }


.beefcake, .strong {
  font-weight: 700; }

.weak {
  font-weight: 300; }

.bigger {
  font-size: 64px;
  font-size: 2.28571rem;
  line-height: 1.125;
  line-height: 54px; }

.centi {
  font-size: 12px;
  font-size: 0.42857rem;
  line-height: 3; }

.small, .milli {
  font-size: 11px;
  font-size: 0.39286rem;
  line-height: 3.27273; }

.micro, .tiny {
  font-size: 10px;
  font-size: 0.35714rem;
  line-height: 3.6; }

.quiet {
  color: #9f9d9c; }

.warning {
  color: #a92125; }

.em, .italic {
  font-style: italic; }

.one-line {
  line-height: 36px; }

.two-lines {
  line-height: 72px; }

.three-lines {
  line-height: 108px; }

.right {
  text-align: right; }

.dark-text {
  color: #45423f; }

code, pre {
  -moz-tab-size: 2;
  tab-size: 2;
  font-size: 22px;
  font-size: 0.78571rem;
  line-height: 1.63636;
  background-color: #111; }

code {
  padding: 36px; }

/*

Body
======

		<div>A text in the body</div>

*/
body {
  position: absolute;
  width: 100%;
  min-height: 100%;
  margin: 0;
  padding: 0;
  color: #f9f9f9;
  background-color: #45423f; }

* {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  outline: none; }

.vertical-margin {
  margin-top: 36px;
  margin-bottom: 36px; }

.vertical-margin--double {
  margin-top: 72px;
  margin-bottom: 72px; }

.vertical-margin--half {
  margin-top: 18px;
  margin-bottom: 18px; }

.horizontal-margin {
  margin-left: 36px;
  margin-right: 36px; }

.horizontal-margin--double {
  margin-left: 72px;
  margin-right: 72px; }

.horizontal-margin--half {
  margin-left: 18px;
  margin-right: 18px; }

.top-margin {
  margin-top: 36px; }

.top-margin--double {
  margin-top: 72px; }

.top-margin--half {
  margin-top: 18px; }

.bottom-margin, .h1-size {
  margin-bottom: 36px; }

.bottom-margin--double {
  margin-bottom: 72px; }

.bottom-margin--half {
  margin-bottom: 18px; }

.left-margin {
  margin-left: 36px; }

.left-margin--double {
  margin-left: 72px; }

.left-margin--half {
  margin-left: 18px; }

.right-margin {
  margin-right: 36px; }

.right-margin--double {
  margin-right: 72px; }

.right-margin--half {
  margin-right: 18px; }

.no-margin {
  margin: 0; }

/**/
.vertical-padding {
  padding-top: 36px;
  padding-bottom: 36px; }

.vertical-padding--double {
  padding-top: 72px;
  padding-bottom: 72px; }

.vertical-padding--half {
  padding-top: 18px;
  padding-bottom: 18px; }

.right-padding {
  padding-right: 36px; }

.right-padding--half {
  padding-right: 18px; }

.left-padding {
  padding-left: 36px; }

.left-padding--half {
  padding-left: 18px; }

.bottom-padding {
  padding-bottom: 36px; }

.bottom-padding--half {
  padding-bottom: 18px; }

.top-padding {
  padding-top: 36px; }

.top-padding--half {
  padding-top: 18px; }

.no-padding {
  padding-left: 0;
  padding-right: 0;
  padding-top: 0;
  padding-bottom: 0; }

/**/

a {
  color: #f9f9f9;
  text-decoration: none;
  -webkit-transition: all 0.1s linear;
  transition: all 0.1s linear; }
  a:hover {
    color: #dbdbdb; }

.horiz-flex {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center; }
  .horiz-flex > * {
    min-width: 20%; }

.reveal pre {
  box-shadow: none;
  border: 1px rgba(255, 255, 255, 0.1) solid; }
  .reveal pre > code {
    background-color: #333;
    max-height: 70vh;
    font-family: "Source Code Pro"; }

.main-wrapper {
  padding-top: 36px; }

input.h1-size {
  background: transparent;
  font-weight: 600;
  color: #f9f9f9;
  border: none; }

.no-show {
  display: none; }

.center {
  text-align: center; }

.left {
  text-align: left; }

.right {
  text-align: right; }

.sticky {
  position: -webkit-sticky;
  position: sticky;
  top: 10px;
  z-index: 200; }

.left-and-right-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-content: flex-end;
  -ms-flex-line-pack: end;
  align-content: flex-end; }

.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

/*# sourceMappingURL=data:application/json;base64,*/